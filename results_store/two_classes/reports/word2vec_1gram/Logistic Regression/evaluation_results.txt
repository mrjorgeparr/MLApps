precision_weighted: 1.0
f1_weighted: 1.0
accuracy: 1.0
recall_weighted: 1.0
classification_report:               precision    recall  f1-score   support

           1       1.00      1.00      1.00      8745

    accuracy                           1.00      8745
   macro avg       1.00      1.00      1.00      8745
weighted avg       1.00      1.00      1.00      8745

optimization_results: {'mean_fit_time': array([0.30208794, 7.36356282, 4.67449355, 0.59736236, 7.44640724,
       2.44869335, 2.66643882, 2.10692382, 2.91823069, 9.14660088]), 'std_fit_time': array([0.00736716, 1.23610104, 0.39126343, 0.10206149, 1.69696017,
       0.04781789, 0.01075308, 0.27534376, 0.05994769, 0.36875395]), 'mean_score_time': array([0.00886385, 0.01564646, 0.00957068, 0.00520889, 0.01565059,
       0.01133227, 0.00300058, 0.0104967 , 0.01041826, 0.00987546]), 'std_score_time': array([6.28095933e-03, 2.46105716e-03, 6.84628935e-03, 7.36648238e-03,
       1.18609083e-05, 2.86765005e-03, 4.24345710e-03, 4.40837308e-03,
       7.36682103e-03, 4.17473486e-03]), 'param_solver': masked_array(data=['liblinear', 'saga', 'saga', 'saga', 'liblinear',
                   'saga', 'saga', 'saga', 'liblinear', 'liblinear'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_penalty': masked_array(data=['l1', 'l1', 'l2', 'l1', 'l1', 'l1', 'l2', 'l2', 'l2',
                   'l1'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_C': masked_array(data=[0.001, 1000.0, 31.622776601683793, 0.001, 1.0,
                   0.03162277660168379, 1.0, 0.001, 1000.0, 1000.0],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'params': [{'solver': 'liblinear', 'penalty': 'l1', 'C': 0.001}, {'solver': 'saga', 'penalty': 'l1', 'C': 1000.0}, {'solver': 'saga', 'penalty': 'l2', 'C': 31.622776601683793}, {'solver': 'saga', 'penalty': 'l1', 'C': 0.001}, {'solver': 'liblinear', 'penalty': 'l1', 'C': 1.0}, {'solver': 'saga', 'penalty': 'l1', 'C': 0.03162277660168379}, {'solver': 'saga', 'penalty': 'l2', 'C': 1.0}, {'solver': 'saga', 'penalty': 'l2', 'C': 0.001}, {'solver': 'liblinear', 'penalty': 'l2', 'C': 1000.0}, {'solver': 'liblinear', 'penalty': 'l1', 'C': 1000.0}], 'split0_test_score': array([0.65540309, 0.83602058, 0.83576329, 0.65540309, 0.83533448,
       0.7974271 , 0.83499142, 0.65548885, 0.83602058, 0.83593482]), 'split1_test_score': array([0.65548885, 0.83696398, 0.83722127, 0.65548885, 0.83782161,
       0.7983705 , 0.83490566, 0.65548885, 0.83704974, 0.83704974]), 'split2_test_score': array([0.6554593 , 0.84055236, 0.84063813, 0.6554593 , 0.84192469,
       0.80126941, 0.84055236, 0.65554507, 0.84055236, 0.84046659]), 'mean_test_score': array([0.65545041, 0.83784564, 0.83787423, 0.65545041, 0.83836026,
       0.79902233, 0.83681648, 0.65550759, 0.83787423, 0.83781705]), 'std_test_score': array([3.55723607e-05, 1.95230693e-03, 2.04300226e-03, 3.55723607e-05,
       2.71727132e-03, 1.63493011e-03, 2.64189855e-03, 2.65031656e-05,
       1.93977508e-03, 1.92800633e-03]), 'rank_test_score': array([9, 4, 2, 9, 1, 7, 6, 8, 3, 5])}
