precision_weighted: 1.0
f1_weighted: 1.0
accuracy: 1.0
recall_weighted: 1.0
classification_report:               precision    recall  f1-score   support

           1       1.00      1.00      1.00      8745

    accuracy                           1.00      8745
   macro avg       1.00      1.00      1.00      8745
weighted avg       1.00      1.00      1.00      8745

optimization_results: {'mean_fit_time': array([ 215.69074281,  218.65318282, 2479.78945708,  285.45813751,
       1408.6928854 , 1621.19997112,  214.97112632,  187.73699252,
        313.44201183,  240.29921627]), 'std_fit_time': array([ 2.82301887,  2.14921227, 10.39854657,  2.41685109, 16.72547847,
        5.63358439,  0.53329864,  0.85398648,  1.0396775 ,  1.80156636]), 'mean_score_time': array([ 55.23985529,  70.51926517,  10.51203068,  95.52340142,
       156.94333116, 220.02496147,  54.42977619,  56.84958863,
        92.82565943,  75.03728135]), 'std_score_time': array([ 0.31855892,  0.81424628,  1.08441503,  0.43472401,  2.40195793,
       75.1207168 ,  0.41741606,  1.67272352,  1.75588518,  0.35181551]), 'param_kernel': masked_array(data=['linear', 'linear', 'linear', 'linear', 'rbf', 'rbf',
                   'linear', 'linear', 'linear', 'linear'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_gamma': masked_array(data=[0.03, 1000, 31, 0.001, 31, 1000, 1, 'scale', 31,
                   'scale'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_C': masked_array(data=[10.0, 0.1, 1000.0, 0.01, 100.0, 100.0, 10.0, 1.0,
                   0.001, 0.001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'params': [{'kernel': 'linear', 'gamma': 0.03, 'C': 10.0}, {'kernel': 'linear', 'gamma': 1000, 'C': 0.1}, {'kernel': 'linear', 'gamma': 31, 'C': 1000.0}, {'kernel': 'linear', 'gamma': 0.001, 'C': 0.01}, {'kernel': 'rbf', 'gamma': 31, 'C': 100.0}, {'kernel': 'rbf', 'gamma': 1000, 'C': 100.0}, {'kernel': 'linear', 'gamma': 1, 'C': 10.0}, {'kernel': 'linear', 'gamma': 'scale', 'C': 1.0}, {'kernel': 'linear', 'gamma': 31, 'C': 0.001}, {'kernel': 'linear', 'gamma': 'scale', 'C': 0.001}], 'split0_test_score': array([0.83490566, 0.82855918, 0.83456261, 0.76157804, 0.6915952 ,
       0.65531732, 0.83490566, 0.83464837, 0.65540309, 0.65540309]), 'split1_test_score': array([0.83945111, 0.8306175 , 0.83867925, 0.75994854, 0.68893654,
       0.65548885, 0.83945111, 0.83945111, 0.65548885, 0.65548885]), 'split2_test_score': array([0.84038082, 0.83532035, 0.83918003, 0.76507419, 0.6928553 ,
       0.6554593 , 0.84038082, 0.83918003, 0.6554593 , 0.6554593 ]), 'mean_test_score': array([0.83824587, 0.83149901, 0.83747396, 0.76220026, 0.69112901,
       0.65542183, 0.83824587, 0.83775984, 0.65545041, 0.65545041]), 'std_test_score': array([2.39218410e-03, 2.82974396e-03, 2.06876545e-03, 2.13829128e-03,
       1.63343917e-03, 7.48718615e-05, 2.39218410e-03, 2.20292233e-03,
       3.55723607e-05, 3.55723607e-05]), 'rank_test_score': array([ 1,  5,  4,  6,  7, 10,  1,  3,  8,  8])}
