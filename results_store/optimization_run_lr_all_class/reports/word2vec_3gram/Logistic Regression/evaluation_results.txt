precision_weighted: 0.8345215371817929
f1_weighted: 0.8322359605200842
accuracy: 0.8361349342481418
recall_weighted: 0.8361349342481418
classification_report:               precision    recall  f1-score   support

           1       0.82      0.68      0.74      3038
           2       0.84      0.92      0.88      5707

    accuracy                           0.84      8745
   macro avg       0.83      0.80      0.81      8745
weighted avg       0.83      0.84      0.83      8745

optimization_results: {'mean_fit_time': array([1.10369225e+02, 7.74488608e+00, 2.86680258e+01, 9.16287899e-02,
       3.11387240e+02, 2.52258884e+02, 4.21761287e+02, 4.20650564e+02,
       8.22315621e+00, 7.73104294e+00, 1.06643542e+01, 8.73404844e+01,
       1.06859048e-01, 1.20548164e+02, 2.26562212e+01, 7.20888774e-02,
       8.13879967e-02, 8.48798656e+00, 3.18990976e+01, 8.06065369e+00,
       2.55176103e+01, 3.28414520e+00, 3.05922840e+01, 7.41059780e-02,
       8.74288193e+00, 9.92447640e+01, 7.46878751e+02, 2.84749035e+02,
       8.61565272e-02, 7.05939085e+02, 4.77581165e+01, 3.73182685e+01,
       6.45799550e+01, 1.28298362e-01, 2.58123290e+02, 4.39006654e+00,
       3.17655607e+02, 9.03683281e+00, 4.13921251e+02, 7.42098369e+01,
       1.16515545e+01, 2.39591074e+02, 6.40640622e+02, 3.05086650e+02,
       8.44288397e+00, 7.91176955e-02, 7.58553346e-02, 1.02422002e+01,
       1.35622422e-01, 6.82935419e+02]), 'std_fit_time': array([1.22901720e+01, 1.41300530e-01, 1.72948676e+00, 9.90767091e-03,
       1.01961584e+01, 1.10740278e+01, 3.57545065e+01, 1.78150248e+01,
       6.21514035e-01, 7.31196595e-01, 7.31519204e-01, 1.59822805e+01,
       4.42135403e-03, 1.19130796e+01, 4.06372679e+00, 9.17071097e-03,
       5.36008741e-03, 1.13633697e+00, 2.35056697e+00, 1.02520781e+00,
       1.69348333e+00, 1.26449050e+00, 9.55820690e-01, 6.13039040e-03,
       9.35984657e-01, 9.27185484e+00, 3.67507158e+01, 4.71759177e+00,
       4.91851449e-03, 4.31327458e+00, 1.26703964e+01, 7.38691580e+00,
       8.26466476e+00, 4.36767879e-02, 1.41200101e+01, 4.44041719e-01,
       1.01626863e+01, 1.82008110e-01, 4.09658549e+01, 6.70588659e+00,
       6.36823886e-01, 1.61630154e+01, 3.43698985e+01, 8.17295334e+00,
       1.13122054e+00, 4.35482499e-03, 2.33483299e-03, 3.33199537e+00,
       3.25670144e-02, 9.31820289e+01]), 'mean_score_time': array([0.02097368, 0.04831322, 0.03699867, 0.        , 0.01138377,
       0.01992893, 0.01422882, 0.01486874, 0.03006188, 0.05823549,
       0.02645389, 0.04617087, 0.        , 0.01911696, 0.0565683 ,
       0.        , 0.        , 0.03001038, 0.02983157, 0.0496854 ,
       0.0249451 , 0.03307271, 0.04251854, 0.        , 0.02914953,
       0.02974272, 0.01867318, 0.01557946, 0.        , 0.02224461,
       0.03271635, 0.03650443, 0.02589258, 0.        , 0.0150133 ,
       0.03493635, 0.01302846, 0.03793073, 0.01423653, 0.03327028,
       0.03902721, 0.04264545, 0.02059531, 0.00925644, 0.02573824,
       0.        , 0.        , 0.02449171, 0.        , 0.0140303 ]), 'std_score_time': array([0.00476898, 0.00682526, 0.01416709, 0.        , 0.00121995,
       0.00722641, 0.00070659, 0.0009273 , 0.00073028, 0.018327  ,
       0.00248345, 0.01205183, 0.        , 0.00723458, 0.02379991,
       0.        , 0.        , 0.00684229, 0.00520211, 0.00782096,
       0.00671846, 0.00229516, 0.01862362, 0.        , 0.0082163 ,
       0.00632932, 0.00783235, 0.00248178, 0.        , 0.00529527,
       0.01093261, 0.00852124, 0.01451966, 0.        , 0.00112581,
       0.00292043, 0.00173203, 0.00984763, 0.00029128, 0.00546916,
       0.01989501, 0.01277654, 0.00534924, 0.00022782, 0.00486695,
       0.        , 0.        , 0.00886965, 0.        , 0.00493458]), 'param_solver': masked_array(data=['saga', 'liblinear', 'saga', 'liblinear', 'saga',
                   'saga', 'saga', 'saga', 'saga', 'liblinear',
                   'liblinear', 'liblinear', 'liblinear', 'saga',
                   'liblinear', 'liblinear', 'liblinear', 'saga', 'saga',
                   'liblinear', 'liblinear', 'saga', 'saga', 'liblinear',
                   'saga', 'liblinear', 'liblinear', 'saga', 'liblinear',
                   'liblinear', 'liblinear', 'liblinear', 'saga',
                   'liblinear', 'saga', 'saga', 'saga', 'liblinear',
                   'saga', 'liblinear', 'saga', 'liblinear', 'liblinear',
                   'saga', 'saga', 'liblinear', 'liblinear', 'liblinear',
                   'liblinear', 'saga'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_penalty': masked_array(data=['l2', 'l1', 'l2', 'elasticnet', 'l1', 'l2', 'l1', 'l1',
                   'l2', 'l1', 'l1', 'l2', 'elasticnet', 'l2', 'l2',
                   'elasticnet', 'elasticnet', 'l2', 'elasticnet', 'l1',
                   'l2', 'l1', 'l2', 'elasticnet', 'l2', 'l2', 'l1', 'l2',
                   'elasticnet', 'l1', 'l2', 'l1', 'elasticnet',
                   'elasticnet', 'l2', 'l1', 'l1', 'l1', 'l1', 'l2', 'l1',
                   'l1', 'l1', 'elasticnet', 'l2', 'elasticnet',
                   'elasticnet', 'l1', 'elasticnet', 'l1'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_l1_ratio': masked_array(data=[0.6000000000000001, 0.2, 0.0, 0.8, 0.2, 0.0,
                   0.6000000000000001, 0.6000000000000001, 0.2, 1.0, 0.8,
                   0.0, 0.2, 0.4, 1.0, 0.0, 0.4, 0.4, 0.8, 0.8, 0.4,
                   0.6000000000000001, 0.2, 0.4, 1.0, 0.8, 0.2, 0.0, 0.2,
                   0.6000000000000001, 1.0, 0.8, 0.4, 0.2, 1.0, 0.8, 0.0,
                   0.6000000000000001, 0.8, 0.0, 1.0, 0.8, 0.4, 1.0, 0.2,
                   1.0, 0.4, 1.0, 1.0, 1.0],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_C': masked_array(data=[10.0, 0.001, 1.0, 10.0, 1.0, 100.0, 100.0, 1000.0,
                   0.001, 0.001, 0.01, 1000.0, 1000.0, 10.0, 0.01, 10.0,
                   100.0, 0.001, 0.1, 0.001, 0.1, 0.001, 1.0, 1.0, 0.001,
                   1000.0, 100.0, 1000.0, 0.001, 10.0, 1.0, 0.1, 1.0, 0.1,
                   100.0, 0.001, 1.0, 0.001, 100.0, 100.0, 0.01, 1.0,
                   10.0, 1.0, 0.01, 10.0, 0.001, 0.01, 1.0, 10.0],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'params': [{'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.6000000000000001, 'C': 10.0}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.2, 'C': 0.001}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.0, 'C': 1.0}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 0.8, 'C': 10.0}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 0.2, 'C': 1.0}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.0, 'C': 100.0}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 0.6000000000000001, 'C': 100.0}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 0.6000000000000001, 'C': 1000.0}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.2, 'C': 0.001}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 1.0, 'C': 0.001}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.8, 'C': 0.01}, {'solver': 'liblinear', 'penalty': 'l2', 'l1_ratio': 0.0, 'C': 1000.0}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 0.2, 'C': 1000.0}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.4, 'C': 10.0}, {'solver': 'liblinear', 'penalty': 'l2', 'l1_ratio': 1.0, 'C': 0.01}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 0.0, 'C': 10.0}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 0.4, 'C': 100.0}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.4, 'C': 0.001}, {'solver': 'saga', 'penalty': 'elasticnet', 'l1_ratio': 0.8, 'C': 0.1}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.8, 'C': 0.001}, {'solver': 'liblinear', 'penalty': 'l2', 'l1_ratio': 0.4, 'C': 0.1}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 0.6000000000000001, 'C': 0.001}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.2, 'C': 1.0}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 0.4, 'C': 1.0}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 1.0, 'C': 0.001}, {'solver': 'liblinear', 'penalty': 'l2', 'l1_ratio': 0.8, 'C': 1000.0}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.2, 'C': 100.0}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.0, 'C': 1000.0}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 0.2, 'C': 0.001}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.6000000000000001, 'C': 10.0}, {'solver': 'liblinear', 'penalty': 'l2', 'l1_ratio': 1.0, 'C': 1.0}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.8, 'C': 0.1}, {'solver': 'saga', 'penalty': 'elasticnet', 'l1_ratio': 0.4, 'C': 1.0}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 0.2, 'C': 0.1}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 1.0, 'C': 100.0}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 0.8, 'C': 0.001}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 0.0, 'C': 1.0}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.6000000000000001, 'C': 0.001}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 0.8, 'C': 100.0}, {'solver': 'liblinear', 'penalty': 'l2', 'l1_ratio': 0.0, 'C': 100.0}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 1.0, 'C': 0.01}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.8, 'C': 1.0}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.4, 'C': 10.0}, {'solver': 'saga', 'penalty': 'elasticnet', 'l1_ratio': 1.0, 'C': 1.0}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.2, 'C': 0.01}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 1.0, 'C': 10.0}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 0.4, 'C': 0.001}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 1.0, 'C': 0.01}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 1.0, 'C': 1.0}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 1.0, 'C': 10.0}], 'split0_test_score': array([0.33370497, 0.17658662, 0.33353345,        nan, 0.33344768,
       0.32890223, 0.32830189, 0.3280446 , 0.1780446 , 0.17658662,
       0.18670669, 0.3254717 ,        nan, 0.33370497, 0.27307033,
              nan,        nan, 0.1780446 , 0.30874786, 0.17658662,
       0.31663808, 0.17658662, 0.33353345,        nan, 0.1780446 ,
       0.3254717 , 0.32564322, 0.32813036,        nan, 0.32658662,
       0.32864494, 0.30608919, 0.335506  ,        nan, 0.32890223,
       0.17658662, 0.33344768, 0.17658662, 0.32830189, 0.32641509,
       0.19313894, 0.32753002, 0.3271012 , 0.33344768, 0.27632933,
              nan,        nan, 0.18679245,        nan, 0.33070326]), 'split1_test_score': array([0.33096055, 0.17658662, 0.33421955,        nan, 0.33198971,
       0.32718696, 0.32701544, 0.32778731, 0.17821612, 0.17658662,
       0.18507719, 0.32401372,        nan, 0.33096055, 0.27264151,
              nan,        nan, 0.17821612, 0.31440823, 0.17658662,
       0.31337907, 0.17658662, 0.33413379,        nan, 0.17821612,
       0.32401372, 0.32555746, 0.32770154,        nan, 0.32701544,
       0.32950257, 0.30900515, 0.33241852,        nan, 0.32718696,
       0.17658662, 0.33198971, 0.17658662, 0.32701544, 0.32487136,
       0.1915952 , 0.32855918, 0.32718696, 0.33198971, 0.27590051,
              nan,        nan, 0.18507719,        nan, 0.32958834]), 'split2_test_score': array([0.33793636, 0.17660177, 0.33356206,        nan, 0.33253281,
       0.33776482, 0.33827944, 0.33836521, 0.17780256, 0.17660177,
       0.18423535, 0.33073162,        nan, 0.33793636, 0.27129256,
              nan,        nan, 0.17780256, 0.30680161, 0.17660177,
       0.31211939, 0.17660177, 0.33356206,        nan, 0.17780256,
       0.33073162, 0.33193241, 0.33827944,        nan, 0.33193241,
       0.32764388, 0.3036281 , 0.33433399,        nan, 0.33776482,
       0.17660177, 0.33253281, 0.17660177, 0.33827944, 0.33193241,
       0.19478514, 0.32910198, 0.3316751 , 0.33253281, 0.27626726,
              nan,        nan, 0.18560769,        nan, 0.33699288]), 'mean_test_score': array([0.33420063, 0.17659167, 0.33377169,        nan, 0.33265673,
       0.33128467, 0.33119892, 0.33139904, 0.17802109, 0.17659167,
       0.18533974, 0.32673901,        nan, 0.33420063, 0.2723348 ,
              nan,        nan, 0.17802109, 0.3099859 , 0.17659167,
       0.31404552, 0.17659167, 0.3337431 ,        nan, 0.17802109,
       0.32673901, 0.32771103, 0.33137045,        nan, 0.32851149,
       0.32859713, 0.30624081, 0.33408617,        nan, 0.33128467,
       0.17659167, 0.33265673, 0.17659167, 0.33119892, 0.32773962,
       0.19317309, 0.32839706, 0.32865442, 0.33265673, 0.2761657 ,
              nan,        nan, 0.18582577,        nan, 0.33242816]), 'std_test_score': array([2.86934750e-03, 7.13986889e-06, 3.16906083e-04,            nan,
       6.01632086e-04, 4.63535397e-03, 5.03415344e-03, 4.92694793e-03,
       1.69654320e-04, 7.13986889e-06, 1.02585771e-03, 2.88526354e-03,
                  nan, 2.86934750e-03, 7.57479497e-04,            nan,
                  nan, 1.69654320e-04, 3.22642587e-03, 7.13986889e-06,
       1.90398516e-03, 7.13986889e-06, 2.76508357e-04,            nan,
       1.69654320e-04, 2.88526354e-03, 2.98517161e-03, 4.88853109e-03,
                  nan, 2.42528395e-03, 7.59560771e-04, 2.19778687e-03,
       1.27258038e-03,            nan, 4.63535397e-03, 7.13986889e-06,
       6.01632086e-04, 7.13986889e-06, 5.03415344e-03, 3.03099669e-03,
       1.30251446e-03, 6.51909799e-04, 2.13622953e-03, 6.01632086e-04,
       1.89220447e-04,            nan,            nan, 7.17034007e-04,
                  nan, 3.25968101e-03]), 'rank_test_score': array([ 1, 35,  4, 42,  6, 12, 14, 10, 32, 35, 31, 22, 49,  1, 28, 46, 44,
       32, 25, 35, 24, 35,  5, 41, 32, 22, 21, 11, 50, 18, 17, 26,  3, 45,
       12, 35,  6, 35, 14, 20, 29, 19, 16,  6, 27, 47, 48, 30, 43,  9],
      dtype=int32)}
