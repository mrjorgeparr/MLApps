precision_weighted: 0.8323281036478235
f1_weighted: 0.8298676974973257
accuracy: 0.8339622641509434
recall_weighted: 0.8339622641509434
classification_report:               precision    recall  f1-score   support

           1       0.81      0.68      0.74      3038
           2       0.84      0.92      0.88      5707

    accuracy                           0.83      8745
   macro avg       0.83      0.80      0.81      8745
weighted avg       0.83      0.83      0.83      8745

optimization_results: {'mean_fit_time': array([1.42614171e+02, 7.14110732e+00, 5.62653581e+01, 1.00277106e-01,
       1.55812832e+02, 1.72751758e+02, 4.12014333e+02, 2.71689064e+02,
       3.32830324e+01, 1.67737653e+01, 2.55237844e+01, 1.06459325e+02,
       2.31774171e-01, 1.38484863e+02, 3.92710516e+01, 2.32379357e-01,
       2.58789619e-01, 3.16586042e+01, 5.01418550e+01, 1.74303606e+01,
       5.53408961e+01, 1.31389553e+01, 7.23388739e+01, 1.62890991e-01,
       3.77141451e+01, 9.84136897e+01, 2.00514388e+02, 1.78575144e+02,
       2.87620306e-01, 1.93711087e+02, 7.85695229e+01, 7.51810834e+01,
       1.06299034e+02, 1.61867460e-01, 1.72547615e+02, 1.13053199e+01,
       1.50264497e+02, 1.62252913e+01, 3.98329533e+02, 8.34527694e+01,
       2.64136091e+01, 1.38801016e+02, 1.75335924e+02, 1.55329041e+02,
       2.32986507e+01, 1.35823250e-01, 1.88885212e-01, 1.50937738e+01,
       2.12323348e-01, 2.95866191e+02]), 'std_fit_time': array([5.93003663e+00, 2.74515497e+00, 1.87239201e+01, 7.36602631e-02,
       9.11184150e+00, 5.15672631e+00, 7.56500363e+01, 1.71879303e+01,
       4.94065076e+00, 5.57521929e-01, 3.12224261e+00, 3.81910729e+00,
       2.47963119e-02, 3.11106536e+00, 4.61239387e+00, 2.12867350e-02,
       5.18403534e-02, 6.75442690e+00, 3.83130516e+00, 7.81078436e-01,
       7.35658713e+00, 3.53473392e+00, 3.06864936e+00, 6.33331631e-02,
       2.79888438e+00, 1.01577094e+01, 4.17685805e+01, 1.30172478e+01,
       3.61844059e-02, 3.26773995e+01, 8.60441649e+00, 1.40782084e+01,
       6.96153582e+00, 9.00452436e-02, 1.07024116e+01, 1.70904681e+00,
       3.86167174e+00, 1.55072878e+00, 8.93261919e+01, 3.34168345e+01,
       3.37875741e+00, 1.24500691e+01, 3.33357679e+01, 5.87293593e+00,
       1.01645823e+01, 5.47347270e-02, 2.11182500e-02, 3.95705136e+00,
       1.11807441e-01, 5.15776679e+01]), 'mean_score_time': array([0.02666815, 0.04377627, 0.01747378, 0.        , 0.01829195,
       0.0166266 , 0.01357309, 0.02263896, 0.09321197, 0.07219028,
       0.08452447, 0.02719522, 0.        , 0.01514085, 0.05934898,
       0.        , 0.        , 0.0190177 , 0.05787595, 0.08303881,
       0.04025793, 0.07593481, 0.03622739, 0.        , 0.07189012,
       0.03095388, 0.01952195, 0.01337965, 0.        , 0.01452057,
       0.02899408, 0.01920867, 0.01674636, 0.        , 0.02280958,
       0.080628  , 0.0191354 , 0.06276306, 0.01439746, 0.0167683 ,
       0.08689555, 0.02229214, 0.02217658, 0.01947832, 0.03753567,
       0.        , 0.        , 0.0418694 , 0.        , 0.01163014]), 'std_score_time': array([0.00272531, 0.0222159 , 0.00331634, 0.        , 0.00531454,
       0.00305311, 0.004672  , 0.00709977, 0.02417781, 0.04963184,
       0.00515559, 0.00741408, 0.        , 0.0062752 , 0.01209204,
       0.        , 0.        , 0.00044365, 0.0282228 , 0.00584379,
       0.01900495, 0.01003608, 0.0238862 , 0.        , 0.0367828 ,
       0.00195959, 0.00617783, 0.00201901, 0.        , 0.00111265,
       0.00535683, 0.00175805, 0.00207974, 0.        , 0.00648917,
       0.01474102, 0.00517358, 0.02075377, 0.00260497, 0.00219733,
       0.00959833, 0.0085101 , 0.0057971 , 0.00383786, 0.01376218,
       0.        , 0.        , 0.02171053, 0.        , 0.00205793]), 'param_solver': masked_array(data=['saga', 'liblinear', 'saga', 'liblinear', 'saga',
                   'saga', 'saga', 'saga', 'saga', 'liblinear',
                   'liblinear', 'liblinear', 'liblinear', 'saga',
                   'liblinear', 'liblinear', 'liblinear', 'saga', 'saga',
                   'liblinear', 'liblinear', 'saga', 'saga', 'liblinear',
                   'saga', 'liblinear', 'liblinear', 'saga', 'liblinear',
                   'liblinear', 'liblinear', 'liblinear', 'saga',
                   'liblinear', 'saga', 'saga', 'saga', 'liblinear',
                   'saga', 'liblinear', 'saga', 'liblinear', 'liblinear',
                   'saga', 'saga', 'liblinear', 'liblinear', 'liblinear',
                   'liblinear', 'saga'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_penalty': masked_array(data=['l2', 'l1', 'l2', 'elasticnet', 'l1', 'l2', 'l1', 'l1',
                   'l2', 'l1', 'l1', 'l2', 'elasticnet', 'l2', 'l2',
                   'elasticnet', 'elasticnet', 'l2', 'elasticnet', 'l1',
                   'l2', 'l1', 'l2', 'elasticnet', 'l2', 'l2', 'l1', 'l2',
                   'elasticnet', 'l1', 'l2', 'l1', 'elasticnet',
                   'elasticnet', 'l2', 'l1', 'l1', 'l1', 'l1', 'l2', 'l1',
                   'l1', 'l1', 'elasticnet', 'l2', 'elasticnet',
                   'elasticnet', 'l1', 'elasticnet', 'l1'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_l1_ratio': masked_array(data=[0.6000000000000001, 0.2, 0.0, 0.8, 0.2, 0.0,
                   0.6000000000000001, 0.6000000000000001, 0.2, 1.0, 0.8,
                   0.0, 0.2, 0.4, 1.0, 0.0, 0.4, 0.4, 0.8, 0.8, 0.4,
                   0.6000000000000001, 0.2, 0.4, 1.0, 0.8, 0.2, 0.0, 0.2,
                   0.6000000000000001, 1.0, 0.8, 0.4, 0.2, 1.0, 0.8, 0.0,
                   0.6000000000000001, 0.8, 0.0, 1.0, 0.8, 0.4, 1.0, 0.2,
                   1.0, 0.4, 1.0, 1.0, 1.0],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_C': masked_array(data=[10.0, 0.001, 1.0, 10.0, 1.0, 100.0, 100.0, 1000.0,
                   0.001, 0.001, 0.01, 1000.0, 1000.0, 10.0, 0.01, 10.0,
                   100.0, 0.001, 0.1, 0.001, 0.1, 0.001, 1.0, 1.0, 0.001,
                   1000.0, 100.0, 1000.0, 0.001, 10.0, 1.0, 0.1, 1.0, 0.1,
                   100.0, 0.001, 1.0, 0.001, 100.0, 100.0, 0.01, 1.0,
                   10.0, 1.0, 0.01, 10.0, 0.001, 0.01, 1.0, 10.0],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'params': [{'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.6000000000000001, 'C': 10.0}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.2, 'C': 0.001}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.0, 'C': 1.0}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 0.8, 'C': 10.0}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 0.2, 'C': 1.0}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.0, 'C': 100.0}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 0.6000000000000001, 'C': 100.0}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 0.6000000000000001, 'C': 1000.0}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.2, 'C': 0.001}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 1.0, 'C': 0.001}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.8, 'C': 0.01}, {'solver': 'liblinear', 'penalty': 'l2', 'l1_ratio': 0.0, 'C': 1000.0}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 0.2, 'C': 1000.0}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.4, 'C': 10.0}, {'solver': 'liblinear', 'penalty': 'l2', 'l1_ratio': 1.0, 'C': 0.01}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 0.0, 'C': 10.0}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 0.4, 'C': 100.0}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.4, 'C': 0.001}, {'solver': 'saga', 'penalty': 'elasticnet', 'l1_ratio': 0.8, 'C': 0.1}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.8, 'C': 0.001}, {'solver': 'liblinear', 'penalty': 'l2', 'l1_ratio': 0.4, 'C': 0.1}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 0.6000000000000001, 'C': 0.001}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.2, 'C': 1.0}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 0.4, 'C': 1.0}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 1.0, 'C': 0.001}, {'solver': 'liblinear', 'penalty': 'l2', 'l1_ratio': 0.8, 'C': 1000.0}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.2, 'C': 100.0}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.0, 'C': 1000.0}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 0.2, 'C': 0.001}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.6000000000000001, 'C': 10.0}, {'solver': 'liblinear', 'penalty': 'l2', 'l1_ratio': 1.0, 'C': 1.0}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.8, 'C': 0.1}, {'solver': 'saga', 'penalty': 'elasticnet', 'l1_ratio': 0.4, 'C': 1.0}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 0.2, 'C': 0.1}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 1.0, 'C': 100.0}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 0.8, 'C': 0.001}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 0.0, 'C': 1.0}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.6000000000000001, 'C': 0.001}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 0.8, 'C': 100.0}, {'solver': 'liblinear', 'penalty': 'l2', 'l1_ratio': 0.0, 'C': 100.0}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 1.0, 'C': 0.01}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.8, 'C': 1.0}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.4, 'C': 10.0}, {'solver': 'saga', 'penalty': 'elasticnet', 'l1_ratio': 1.0, 'C': 1.0}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.2, 'C': 0.01}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 1.0, 'C': 10.0}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 0.4, 'C': 0.001}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 1.0, 'C': 0.01}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 1.0, 'C': 1.0}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 1.0, 'C': 10.0}], 'split0_test_score': array([0.33722127, 0.17658662, 0.33636364,        nan, 0.33850772,
       0.33679245, 0.33662093, 0.33619211, 0.17667238, 0.17658662,
       0.17658662, 0.3280446 ,        nan, 0.33722127, 0.27135506,
              nan,        nan, 0.17667238, 0.31535163, 0.17658662,
       0.31689537, 0.17658662, 0.33636364,        nan, 0.17667238,
       0.3280446 , 0.32915952, 0.33610635,        nan, 0.3296741 ,
       0.33147513, 0.3067753 , 0.33773585,        nan, 0.33679245,
       0.17658662, 0.33850772, 0.17658662, 0.33662093, 0.32855918,
       0.17658662, 0.3313036 , 0.32993139, 0.33850772, 0.27607204,
              nan,        nan, 0.17658662,        nan, 0.3364494 ]), 'split1_test_score': array([0.32864494, 0.17658662, 0.33121784,        nan, 0.32984563,
       0.3287307 , 0.32881647, 0.32855918, 0.17667238, 0.17658662,
       0.17658662, 0.3245283 ,        nan, 0.32864494, 0.26998285,
              nan,        nan, 0.17667238, 0.31466552, 0.17658662,
       0.31861063, 0.17658662, 0.33121784,        nan, 0.17667238,
       0.3245283 , 0.32530017, 0.32855918,        nan, 0.32564322,
       0.32950257, 0.30789022, 0.33198971,        nan, 0.3287307 ,
       0.17658662, 0.32984563, 0.17658662, 0.32881647, 0.32469983,
       0.17658662, 0.32950257, 0.32598628, 0.32984563, 0.2761578 ,
              nan,        nan, 0.17658662,        nan, 0.32984563]), 'split2_test_score': array([0.33776482, 0.17660177, 0.34085256,        nan, 0.33802213,
       0.33630672, 0.33622095, 0.33596363, 0.17660177, 0.17660177,
       0.17660177, 0.330217  ,        nan, 0.33776482, 0.26949138,
              nan,        nan, 0.17660177, 0.31194785, 0.17660177,
       0.31786603, 0.17660177, 0.34085256,        nan, 0.17660177,
       0.330217  , 0.33184664, 0.33596363,        nan, 0.33279012,
       0.33253281, 0.30851703, 0.3401664 ,        nan, 0.33630672,
       0.17660177, 0.33802213, 0.17660177, 0.33622095, 0.33013123,
       0.17660177, 0.33279012, 0.33287589, 0.33802213, 0.27523801,
              nan,        nan, 0.17660177,        nan, 0.33630672]), 'mean_test_score': array([0.33454368, 0.17659167, 0.33614468,        nan, 0.33545849,
       0.33394329, 0.33388611, 0.33357164, 0.17664885, 0.17659167,
       0.17659167, 0.32759663,        nan, 0.33454368, 0.27027643,
              nan,        nan, 0.17664885, 0.31398833, 0.17659167,
       0.31779068, 0.17659167, 0.33614468,        nan, 0.17664885,
       0.32759663, 0.32876878, 0.33354305,        nan, 0.32936915,
       0.33117017, 0.30772752, 0.33663065,        nan, 0.33394329,
       0.17659167, 0.33545849, 0.17659167, 0.33388611, 0.32779674,
       0.17659167, 0.33119876, 0.32959785, 0.33545849, 0.27582262,
              nan,        nan, 0.17659167,        nan, 0.33420058]), 'std_test_score': array([4.17693433e-03, 7.13986889e-06, 3.93640457e-03,            nan,
       3.97384286e-03, 3.69118640e-03, 3.58849829e-03, 3.54557387e-03,
       3.32893353e-05, 7.13986889e-06, 7.13986889e-06, 2.34390339e-03,
                  nan, 4.17693433e-03, 7.88656442e-04,            nan,
                  nan, 3.32893353e-05, 1.46977650e-03, 7.13986889e-06,
       7.02278401e-04, 7.13986889e-06, 3.93640457e-03,            nan,
       3.32893353e-05, 2.34390339e-03, 2.68682944e-03, 3.52461371e-03,
                  nan, 2.92566482e-03, 1.25574151e-03, 7.20304046e-04,
       3.42837653e-03,            nan, 3.69118640e-03, 7.13986889e-06,
       3.97384286e-03, 7.13986889e-06, 3.58849829e-03, 2.28195895e-03,
       7.13986889e-06, 1.34418088e-03, 2.82254301e-03, 3.97384286e-03,
       4.14859108e-04,            nan,            nan, 7.13986889e-06,
                  nan, 3.07996871e-03]), 'rank_test_score': array([ 7, 32,  2, 46,  4, 10, 12, 14, 29, 32, 32, 22, 49,  7, 28, 44, 50,
       29, 25, 32, 24, 32,  2, 48, 29, 22, 20, 15, 45, 19, 17, 26,  1, 47,
       10, 32,  4, 32, 12, 21, 32, 16, 18,  4, 27, 42, 41, 32, 43,  9],
      dtype=int32)}
