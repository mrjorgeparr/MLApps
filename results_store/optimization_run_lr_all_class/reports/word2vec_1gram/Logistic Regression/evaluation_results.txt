precision_weighted: 0.8296622714473043
f1_weighted: 0.826738191144999
accuracy: 0.8312178387650085
recall_weighted: 0.8312178387650085
classification_report:               precision    recall  f1-score   support

           1       0.81      0.67      0.73      3038
           2       0.84      0.92      0.88      5707

    accuracy                           0.83      8745
   macro avg       0.83      0.79      0.80      8745
weighted avg       0.83      0.83      0.83      8745

optimization_results: {'mean_fit_time': array([1.46741989e+02, 1.70633822e+01, 8.62207390e+01, 1.98191166e-01,
       1.75457254e+02, 1.75357848e+02, 5.42831494e+02, 2.60246468e+02,
       3.80804532e+01, 1.79910794e+01, 1.61444178e+01, 1.26376624e+02,
       1.67887847e-01, 1.49099246e+02, 4.36853011e+01, 2.05674807e-01,
       2.77748903e-01, 3.96303987e+01, 6.06500347e+01, 1.89414276e+01,
       6.86563818e+01, 1.25632439e+01, 7.15752016e+01, 3.05502017e-01,
       3.80063292e+01, 1.07925077e+02, 2.49549674e+02, 1.79328636e+02,
       2.66112248e-01, 2.14614781e+02, 9.12172484e+01, 9.63004705e+01,
       1.11491569e+02, 2.62369871e-01, 1.76973073e+02, 1.19007804e+01,
       1.58958741e+02, 1.96569064e+01, 5.43238140e+02, 1.17050172e+02,
       4.03541892e+01, 1.81969568e+02, 2.39654304e+02, 1.77474200e+02,
       3.11185360e+01, 1.77086512e-01, 1.07721408e-01, 2.32718902e+01,
       2.46807973e-01, 3.54744630e+02]), 'std_fit_time': array([1.72827441e+01, 7.06230943e-01, 2.13289042e+00, 1.24804816e-02,
       1.81681830e+01, 8.54269789e+00, 2.04931475e+02, 1.45127166e+01,
       2.12086308e+00, 3.97126708e+00, 4.09088962e+00, 6.05127991e+00,
       5.86634326e-02, 4.07353823e+00, 1.84426269e+00, 1.93996690e-02,
       4.64651980e-02, 1.96253563e+00, 1.83734087e+00, 5.30753272e-01,
       3.52230281e+00, 3.53364273e+00, 3.20768059e+00, 3.55937305e-02,
       4.43925775e+00, 2.40142494e+00, 4.34982722e+01, 1.45129947e+01,
       2.64463102e-02, 2.02523486e+01, 6.62830910e+00, 6.26735509e+00,
       8.21084144e+00, 5.26346013e-02, 1.27791808e+01, 5.64164427e+00,
       1.03754449e+01, 3.49609422e-01, 2.04772604e+02, 7.24712851e+00,
       6.60967107e+00, 2.48952048e+01, 4.98246432e+01, 2.83170749e+01,
       3.57383158e+00, 5.65217570e-02, 4.68824040e-02, 1.24788133e+00,
       6.19885300e-02, 2.16510242e+01]), 'mean_score_time': array([0.01859808, 0.11177023, 0.06926171, 0.        , 0.02545683,
       0.02192672, 0.01347661, 0.0137821 , 0.08965119, 0.0835437 ,
       0.09791025, 0.02405898, 0.        , 0.02016219, 0.06429625,
       0.        , 0.        , 0.05195737, 0.06256302, 0.09451175,
       0.06985521, 0.0845089 , 0.03434014, 0.        , 0.08079131,
       0.03500803, 0.02436646, 0.0172383 , 0.        , 0.02572544,
       0.04732323, 0.036702  , 0.03472161, 0.        , 0.01468412,
       0.13782231, 0.01926541, 0.0858748 , 0.01700322, 0.02393826,
       0.06641046, 0.02317826, 0.02013461, 0.02186068, 0.0859499 ,
       0.        , 0.        , 0.05507549, 0.        , 0.01764202]), 'std_score_time': array([0.00826152, 0.02667837, 0.00687826, 0.        , 0.00299708,
       0.00828061, 0.00378021, 0.00087358, 0.02223818, 0.03561398,
       0.02698977, 0.00972782, 0.        , 0.00527567, 0.01757602,
       0.        , 0.        , 0.01251078, 0.00601717, 0.01191878,
       0.00406768, 0.01752737, 0.01034096, 0.        , 0.0176534 ,
       0.01421816, 0.00650738, 0.00317638, 0.        , 0.00676381,
       0.02304563, 0.01404304, 0.00296435, 0.        , 0.00032234,
       0.03659676, 0.0061664 , 0.00829203, 0.00743482, 0.00786439,
       0.00194923, 0.00757541, 0.00820909, 0.00712122, 0.02845908,
       0.        , 0.        , 0.00340401, 0.        , 0.00803405]), 'param_solver': masked_array(data=['saga', 'liblinear', 'saga', 'liblinear', 'saga',
                   'saga', 'saga', 'saga', 'saga', 'liblinear',
                   'liblinear', 'liblinear', 'liblinear', 'saga',
                   'liblinear', 'liblinear', 'liblinear', 'saga', 'saga',
                   'liblinear', 'liblinear', 'saga', 'saga', 'liblinear',
                   'saga', 'liblinear', 'liblinear', 'saga', 'liblinear',
                   'liblinear', 'liblinear', 'liblinear', 'saga',
                   'liblinear', 'saga', 'saga', 'saga', 'liblinear',
                   'saga', 'liblinear', 'saga', 'liblinear', 'liblinear',
                   'saga', 'saga', 'liblinear', 'liblinear', 'liblinear',
                   'liblinear', 'saga'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_penalty': masked_array(data=['l2', 'l1', 'l2', 'elasticnet', 'l1', 'l2', 'l1', 'l1',
                   'l2', 'l1', 'l1', 'l2', 'elasticnet', 'l2', 'l2',
                   'elasticnet', 'elasticnet', 'l2', 'elasticnet', 'l1',
                   'l2', 'l1', 'l2', 'elasticnet', 'l2', 'l2', 'l1', 'l2',
                   'elasticnet', 'l1', 'l2', 'l1', 'elasticnet',
                   'elasticnet', 'l2', 'l1', 'l1', 'l1', 'l1', 'l2', 'l1',
                   'l1', 'l1', 'elasticnet', 'l2', 'elasticnet',
                   'elasticnet', 'l1', 'elasticnet', 'l1'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_l1_ratio': masked_array(data=[0.6000000000000001, 0.2, 0.0, 0.8, 0.2, 0.0,
                   0.6000000000000001, 0.6000000000000001, 0.2, 1.0, 0.8,
                   0.0, 0.2, 0.4, 1.0, 0.0, 0.4, 0.4, 0.8, 0.8, 0.4,
                   0.6000000000000001, 0.2, 0.4, 1.0, 0.8, 0.2, 0.0, 0.2,
                   0.6000000000000001, 1.0, 0.8, 0.4, 0.2, 1.0, 0.8, 0.0,
                   0.6000000000000001, 0.8, 0.0, 1.0, 0.8, 0.4, 1.0, 0.2,
                   1.0, 0.4, 1.0, 1.0, 1.0],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_C': masked_array(data=[10.0, 0.001, 1.0, 10.0, 1.0, 100.0, 100.0, 1000.0,
                   0.001, 0.001, 0.01, 1000.0, 1000.0, 10.0, 0.01, 10.0,
                   100.0, 0.001, 0.1, 0.001, 0.1, 0.001, 1.0, 1.0, 0.001,
                   1000.0, 100.0, 1000.0, 0.001, 10.0, 1.0, 0.1, 1.0, 0.1,
                   100.0, 0.001, 1.0, 0.001, 100.0, 100.0, 0.01, 1.0,
                   10.0, 1.0, 0.01, 10.0, 0.001, 0.01, 1.0, 10.0],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'params': [{'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.6000000000000001, 'C': 10.0}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.2, 'C': 0.001}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.0, 'C': 1.0}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 0.8, 'C': 10.0}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 0.2, 'C': 1.0}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.0, 'C': 100.0}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 0.6000000000000001, 'C': 100.0}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 0.6000000000000001, 'C': 1000.0}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.2, 'C': 0.001}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 1.0, 'C': 0.001}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.8, 'C': 0.01}, {'solver': 'liblinear', 'penalty': 'l2', 'l1_ratio': 0.0, 'C': 1000.0}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 0.2, 'C': 1000.0}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.4, 'C': 10.0}, {'solver': 'liblinear', 'penalty': 'l2', 'l1_ratio': 1.0, 'C': 0.01}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 0.0, 'C': 10.0}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 0.4, 'C': 100.0}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.4, 'C': 0.001}, {'solver': 'saga', 'penalty': 'elasticnet', 'l1_ratio': 0.8, 'C': 0.1}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.8, 'C': 0.001}, {'solver': 'liblinear', 'penalty': 'l2', 'l1_ratio': 0.4, 'C': 0.1}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 0.6000000000000001, 'C': 0.001}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.2, 'C': 1.0}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 0.4, 'C': 1.0}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 1.0, 'C': 0.001}, {'solver': 'liblinear', 'penalty': 'l2', 'l1_ratio': 0.8, 'C': 1000.0}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.2, 'C': 100.0}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.0, 'C': 1000.0}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 0.2, 'C': 0.001}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.6000000000000001, 'C': 10.0}, {'solver': 'liblinear', 'penalty': 'l2', 'l1_ratio': 1.0, 'C': 1.0}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.8, 'C': 0.1}, {'solver': 'saga', 'penalty': 'elasticnet', 'l1_ratio': 0.4, 'C': 1.0}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 0.2, 'C': 0.1}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 1.0, 'C': 100.0}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 0.8, 'C': 0.001}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 0.0, 'C': 1.0}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.6000000000000001, 'C': 0.001}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 0.8, 'C': 100.0}, {'solver': 'liblinear', 'penalty': 'l2', 'l1_ratio': 0.0, 'C': 100.0}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 1.0, 'C': 0.01}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.8, 'C': 1.0}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 0.4, 'C': 10.0}, {'solver': 'saga', 'penalty': 'elasticnet', 'l1_ratio': 1.0, 'C': 1.0}, {'solver': 'saga', 'penalty': 'l2', 'l1_ratio': 0.2, 'C': 0.01}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 1.0, 'C': 10.0}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 0.4, 'C': 0.001}, {'solver': 'liblinear', 'penalty': 'l1', 'l1_ratio': 1.0, 'C': 0.01}, {'solver': 'liblinear', 'penalty': 'elasticnet', 'l1_ratio': 1.0, 'C': 1.0}, {'solver': 'saga', 'penalty': 'l1', 'l1_ratio': 1.0, 'C': 10.0}], 'split0_test_score': array([0.3313036 , 0.17658662, 0.32984563,        nan, 0.32915952,
       0.3296741 , 0.32881647, 0.32950257, 0.17667238, 0.17658662,
       0.17658662, 0.32307033,        nan, 0.3313036 , 0.27066895,
              nan,        nan, 0.17667238, 0.30711835, 0.17658662,
       0.31560892, 0.17658662, 0.32984563,        nan, 0.17667238,
       0.32307033, 0.32349914, 0.32950257,        nan, 0.32349914,
       0.32770154, 0.30591767, 0.32890223,        nan, 0.3296741 ,
       0.17658662, 0.32915952, 0.17658662, 0.32881647, 0.32315609,
       0.17641509, 0.32744425, 0.32332762, 0.32915952, 0.27607204,
              nan,        nan, 0.17658662,        nan, 0.32984563]), 'split1_test_score': array([0.32392796, 0.17658662, 0.32984563,        nan, 0.32984563,
       0.32212693, 0.32169811, 0.32144082, 0.17667238, 0.17658662,
       0.17658662, 0.32272727,        nan, 0.32392796, 0.26878216,
              nan,        nan, 0.17667238, 0.31269297, 0.17658662,
       0.31509434, 0.17658662, 0.32984563,        nan, 0.17667238,
       0.32272727, 0.32221269, 0.32144082,        nan, 0.3228988 ,
       0.32607204, 0.31217839, 0.32830189,        nan, 0.32212693,
       0.17658662, 0.32993139, 0.17658662, 0.32161235, 0.32281304,
       0.17658662, 0.32341338, 0.32307033, 0.32993139, 0.27427101,
              nan,        nan, 0.17658662,        nan, 0.32264151]), 'split2_test_score': array([0.33785059, 0.17660177, 0.33965177,        nan, 0.3337336 ,
       0.33639249, 0.33639249, 0.33622095, 0.17677331, 0.17660177,
       0.17660177, 0.3331332 ,        nan, 0.33785059, 0.26949138,
              nan,        nan, 0.17677331, 0.3080024 , 0.17660177,
       0.31512137, 0.17660177, 0.33965177,        nan, 0.17677331,
       0.3331332 , 0.33424822, 0.33613517,        nan, 0.33381937,
       0.3316751 , 0.30465735, 0.33905138,        nan, 0.33639249,
       0.14057809, 0.3337336 , 0.17660177, 0.33639249, 0.33347628,
       0.176516  , 0.32970238, 0.33399091, 0.3337336 , 0.27343683,
              nan,        nan, 0.17660177,        nan, 0.33690711]), 'mean_test_score': array([0.33102738, 0.17659167, 0.33311434,        nan, 0.33091291,
       0.32939784, 0.32896902, 0.32905478, 0.17670603, 0.17659167,
       0.17659167, 0.32631027,        nan, 0.33102738, 0.2696475 ,
              nan,        nan, 0.17670603, 0.30927124, 0.17659167,
       0.31527487, 0.17659167, 0.33311434,        nan, 0.17670603,
       0.32631027, 0.32665335, 0.32902619,        nan, 0.3267391 ,
       0.3284829 , 0.30758447, 0.33208516,        nan, 0.32939784,
       0.16458378, 0.3309415 , 0.17659167, 0.32894043, 0.3264818 ,
       0.1765059 , 0.32685334, 0.32679628, 0.3309415 , 0.27459329,
              nan,        nan, 0.17659167,        nan, 0.32979808]), 'std_test_score': array([5.68724422e-03, 7.13986889e-06, 4.62266113e-03,            nan,
       2.01409566e-03, 5.82716443e-03, 5.99992258e-03, 6.04226167e-03,
       4.75760084e-05, 7.13986889e-06, 7.13986889e-06, 4.82657594e-03,
                  nan, 5.68724422e-03, 7.78149997e-04,            nan,
                  nan, 4.75760084e-05, 2.44629586e-03, 7.13986889e-06,
       2.36462716e-04, 7.13986889e-06, 4.62266113e-03,            nan,
       4.75760084e-05, 4.82657594e-03, 5.39600207e-03, 6.00839384e-03,
                  nan, 5.01249824e-03, 2.35321792e-03, 3.28888858e-03,
       4.93194940e-03,            nan, 5.82716443e-03, 1.69745823e-02,
       1.99929815e-03, 7.13986889e-06, 6.03460219e-03, 4.94782760e-03,
       7.03881373e-05, 2.60125070e-03, 5.08845235e-03, 1.99929815e-03,
       1.09969208e-03,            nan,            nan, 7.13986889e-06,
                  nan, 5.82400423e-03]), 'rank_test_score': array([ 4, 32,  1, 46,  8, 10, 14, 12, 29, 32, 32, 22, 49,  4, 28, 44, 50,
       29, 25, 32, 24, 32,  1, 48, 29, 22, 20, 13, 45, 19, 16, 26,  3, 47,
       10, 40,  6, 32, 15, 21, 39, 17, 18,  6, 27, 42, 41, 32, 43,  9],
      dtype=int32)}
